{{define "base"}}
<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no" />

    <title>My Nice Page</title>

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
      integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N"
      crossorigin="anonymous" />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs4.min.css" />

    <link
      rel="stylesheet"
      type="text/css"
      href="https://unpkg.com/notie/dist/notie.min.css" />

    <link rel="stylesheet" type="text/css" href="/src/static/css/styles.css" />
  </head>

  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand" href="#">Navbar</a>
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent"
        aria-expanded="false"
        aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item active">
            <a class="nav-link" href="/"
              >Home <span class="sr-only">(current)</span></a
            >
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/about">About</a>
          </li>
          <li class="nav-item dropdown">
            <a
              class="nav-link dropdown-toggle"
              href="#"
              role="button"
              data-toggle="dropdown"
              aria-expanded="false">
              Rooms
            </a>
            <div class="dropdown-menu">
              <a class="dropdown-item" href="/generals-quarters"
                >General Quarter</a
              >
              <a class="dropdown-item" href="/majors-suite">Major Suite</a>
            </div>
          </li>
          <li class="nav-item">
            <a href="/search-availability" class="nav-link">Book Now</a>
          </li>
          <li class="nav-item">
            <a href="/contact" class="nav-link">Contact</a>
          </li>
        </ul>
      </div>
    </nav>
    {{block "content" .}}
    {{ end }}

    <div class="row my-footer">
      <div class="col">Left</div>
      <div class="col">Mid</div>
      <div class="col">Right</div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"
      integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
      crossorigin="anonymous"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
      integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
      crossorigin="anonymous"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"
      integrity="sha384-+sLIOodYLS7CIrQpBjl+C7nPvqq+FbNUBDunl/OZv93DB7Ln/533i8e/mZXLi/P+"
      crossorigin="anonymous"></script>

    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>

    <script src="https://unpkg.com/notie"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {{ block "js" .}}

    {{ end }}

    <script>
      let attention = prompt();
      (function () {
        'use strict';
        window.addEventListener(
          'load',
          function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            let forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            Array.prototype.filter.call(forms, function (form) {
              form.addEventListener(
                'submit',
                function (event) {
                  if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                  }
                  form.classList.add('was-validated');
                },
                false
              );
            });
          },
          false
        );
      })();

      function notify(msgType, msg) {
        notie.alert({
          type: msgType,
          text: msg,
        });
      }

      function notifyModal(title, text, icon, confirmButtonText) {
        Swal.fire({
          title,
          html: text,
          icon,
          confirmButtonText,
        });
      }

      function prompt(config) {
        let toast = function (config) {
          const { position = 'top-end', title = '', icon = 'success' } = config;
          let t = Swal.mixin({
            title,
            icon,
            toast: true,
            position,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
          });

          t.fire({});
        };

        let success = function (config) {
          const {
            icon = 'success',
            title = '',
            text: html = '',
            footer = '',
          } = config;
          let modal = Swal.fire({
            icon,
            title,
            html,
            footer,
          });

          modal.fire({});
        };

        let error = function (config) {
          const {
            icon = 'error',
            title = '',
            text: html = '',
            footer = '',
          } = config;
          let modal = Swal.fire({
            icon,
            title,
            html,
            footer,
          });

          modal.fire({});
        };

        async function custom(config) {
          const { html = '', title = '', callback } = config;

          const { value: result } = await Swal.fire({
            title,
            html,
            backdrop: false,
            focusConfirm: false,
            showCancelButton: true,
            willOpen: () => {
              if (config.willOpen !== undefined) {
                config.willOpen();
              }
            },
            didOpen: () => {
              if (config.didOpen != undefined) {
                config.didOpen();
              }
            },
            preConfirm: () => {
              return [
                document.getElementById('start').value,
                document.getElementById('end').value,
              ];
            },
          });
          if (result) {
            if (result.dismiss !== Swal.DismissReason.cancel) {
              if (result.value !== '') {
                if (callback !== undefined) {
                  callback(result);
                }
              } else {
                callback(false);
              }
            } else {
              callback(false);
            }
          }
        }

        return {
          toast,
          success,
          error,
          custom,
        };
      }
    </script>
  </body>
</html>

{{ end }}
